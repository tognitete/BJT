{"ast":null,"code":"import _objectSpread from \"D:\\\\polytech_nice_sophia\\\\SI5\\\\Programmable-web\\\\Projet\\\\BJT\\\\client-side\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\polytech_nice_sophia\\\\SI5\\\\Programmable-web\\\\Projet\\\\BJT\\\\client-side\\\\src\\\\Components\\\\PluginsETdescriptions\\\\commentForm.js\";\nimport React, { Component } from \"react\";\nexport default class CommentForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFieldChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState(_objectSpread({}, this.state, {\n        comment: _objectSpread({}, this.state.comment, {\n          [name]: value\n        })\n      }));\n    };\n\n    this.state = {\n      loading: false,\n      error: \"\",\n      comment: {\n        name: \"\",\n        message: \"\"\n      }\n    }; // bind context to methods\n\n    this.handleFieldChange = this.handleFieldChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  /**\r\n   * Handle form input field changes & update the state\r\n   */\n\n\n  /**\r\n   * Form submit handler\r\n   */\n  onSubmit(e) {\n    // prevent default form submission\n    e.preventDefault();\n\n    if (!this.isFormValid()) {\n      this.setState({\n        error: \"All fields are required.\"\n      });\n      return;\n    } // loading status and clear error\n\n\n    this.setState({\n      error: \"\",\n      loading: true\n    }); // persist the comments on server\n\n    let comment = this.state.comment;\n    fetch(\"http://localhost:3001/plugin/\" + this.props.nomPlugin + \"/comment\", {\n      method: \"post\",\n      body: JSON.stringify(comment)\n    }).then(res => res.json()).then(res => {\n      if (res.error) {\n        this.setState({\n          loading: false,\n          error: res.error\n        });\n      } else {\n        // add time return from api and push comment to parent state\n        comment.time = res.time;\n        this.props.addComment(comment); // clear the message box\n\n        this.setState({\n          loading: false,\n          comment: _objectSpread({}, comment, {\n            message: \"\"\n          })\n        });\n      }\n    }).catch(err => {\n      this.setState({\n        error: \"Something went wrong while submitting form.\",\n        loading: false\n      });\n    });\n  }\n  /**\r\n   * Simple validation\r\n   */\n\n\n  isFormValid() {\n    return this.state.comment.name !== \"\" && this.state.comment.message !== \"\";\n  }\n\n  renderError() {\n    return this.state.error ? React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.error) : null;\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      method: \"post\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleFieldChange,\n      value: this.state.comment.name,\n      className: \"form-control\",\n      placeholder: \" Your Name\",\n      name: \"name\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      onChange: this.handleFieldChange,\n      value: this.state.comment.message,\n      className: \"form-control\",\n      placeholder: \" Your Comment\",\n      name: \"message\",\n      rows: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), this.renderError(), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      disabled: this.state.loading,\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Comment \\u27A4\"))));\n  }\n\n}","map":{"version":3,"sources":["D:/polytech_nice_sophia/SI5/Programmable-web/Projet/BJT/client-side/src/Components/PluginsETdescriptions/commentForm.js"],"names":["React","Component","CommentForm","constructor","props","handleFieldChange","event","target","value","name","setState","state","comment","loading","error","message","bind","onSubmit","e","preventDefault","isFormValid","fetch","nomPlugin","method","body","JSON","stringify","then","res","json","time","addComment","catch","err","renderError","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      error: \"\",\r\n\r\n      comment: {\r\n        name: \"\",\r\n        message: \"\"\r\n      }\r\n    };\r\n\r\n    // bind context to methods\r\n    this.handleFieldChange = this.handleFieldChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Handle form input field changes & update the state\r\n   */\r\n  handleFieldChange = event => {\r\n    const { value, name } = event.target;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      comment: {\r\n        ...this.state.comment,\r\n        [name]: value\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Form submit handler\r\n   */\r\n  onSubmit(e) {\r\n    // prevent default form submission\r\n    e.preventDefault();\r\n\r\n    if (!this.isFormValid()) {\r\n      this.setState({ error: \"All fields are required.\" });\r\n      return;\r\n    }\r\n\r\n    // loading status and clear error\r\n    this.setState({ error: \"\", loading: true });\r\n\r\n    // persist the comments on server\r\n    let { comment } = this.state;\r\n    fetch(\"http://localhost:3001/plugin/\" + this.props.nomPlugin +\"/comment\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(comment)\r\n    })\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        if (res.error) {\r\n          this.setState({ loading: false, error: res.error });\r\n        } else {\r\n          // add time return from api and push comment to parent state\r\n          comment.time = res.time;\r\n          this.props.addComment(comment);\r\n\r\n          // clear the message box\r\n          this.setState({\r\n            loading: false,\r\n            comment: { ...comment, message: \"\" }\r\n          });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: \"Something went wrong while submitting form.\",\r\n          loading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Simple validation\r\n   */\r\n  isFormValid() {\r\n    return this.state.comment.name !== \"\" && this.state.comment.message !== \"\";\r\n  }\r\n\r\n  renderError() {\r\n    return this.state.error ? (\r\n      <div className=\"alert alert-danger\">{this.state.error}</div>\r\n    ) : null;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form method=\"post\" onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <input\r\n              onChange={this.handleFieldChange}\r\n              value={this.state.comment.name}\r\n              className=\"form-control\"\r\n              placeholder=\" Your Name\"\r\n              name=\"name\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              onChange={this.handleFieldChange}\r\n              value={this.state.comment.message}\r\n              className=\"form-control\"\r\n              placeholder=\" Your Comment\"\r\n              name=\"message\"\r\n              rows=\"5\"\r\n            />\r\n          </div>\r\n\r\n          {this.renderError()}\r\n\r\n          <div className=\"form-group\">\r\n            <button disabled={this.state.loading} className=\"btn btn-primary\">\r\n              Comment &#10148;\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}